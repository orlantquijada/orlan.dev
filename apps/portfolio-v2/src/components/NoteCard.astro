---
import { cva } from 'cva'

export type Props = {
  title: string
  description?: string
  href: string
}

const noteCardStyles = cva(
  ['inline-block mb-4 w-full p-4', 'transition-colors border rounded-lg'],
  {
    variants: {
      color: { gray: 'border-gray3 bg-gray1 text-gray11' },
      transluscent: {
        true: 'dark:border-grayA3 dark:bg-grayA3 dark:hover:bg-grayA4 text-gray12',
        false:
          'dark:border-gray3 dark:bg-gray3 dark:hover:bg-gray4 text-gray12',
      },
    },
    defaultVariants: {
      color: 'gray',
      transluscent: true,
    },
  }
)

const { title, description, href } = Astro.props
---

<a href={href} class={noteCardStyles()}>
  <h3 class="font-medium">{title}</h3>
  {
    description ? (
      <p class="text-sm text-gray10 dark:text-gray11">{description}</p>
    ) : null
  }
</a>

<style>
  a {
    @apply hover:before:opacity-100;
    position: relative;
    -webkit-tap-highlight-color: transparent;
  }

  a:nth-child(1n):hover {
    border-color: var(--accent);
  }
  a:nth-child(2n):hover {
    border-color: var(--accent-violet);
  }
  a:nth-child(3n):hover {
    border-color: var(--accent-pink);
  }
  a:nth-child(4n):hover {
    border-color: var(--accent-blue);
  }

  a::before {
    @apply transition-opacity opacity-0 absolute inset-0 rounded-[inherit];
    content: '';
    --shadow-color: 0deg 0% 60%;
    --shadow: 0px 1px 1.5px hsl(var(--shadow-color) / 0),
      0px 3px 4.5px hsl(var(--shadow-color) / 0.25);
    box-shadow: var(--shadow);
  }
  html.dark a::before {
    --shadow-color: 0deg 0% 13.6%;
  }
</style>
