---
import { query, storageKey } from '@/lib/theme-toggle'
---

<!-- inline is necessary to avoid FOUC 
     flash happens on dark mode default -->
<script is:inline define:vars={{ query, storageKey }}>
////////////////////////////// Util fns //////////////////////////////

const disableTransitionOnThemeChange = (callback) => {
  const css = document.createElement('style')
  css.type = 'text/css'
  css.appendChild(
    document.createTextNode(
      `* {
            -webkit-transition: none !important;
            -moz-transition: none !important;
            -o-transition: none !important;
            -ms-transition: none !important;
            transition: none !important;
          }`,
    ),
  )
  document.head.appendChild(css)

  callback()

  setTimeout(() => {
    const _ = window.getComputedStyle(css).opacity
    document.head.removeChild(css)
  }, 1)
}

const getDefaultTheme = () => {
  return window.matchMedia('(prefers-color-scheme: dark)').matches
    ? 'dark'
    : 'light'
}

const getTheme = () => {
  const theme = localStorage.getItem(storageKey)
  if (theme) return theme
  return getDefaultTheme()
}

const setTheme = (theme) => {
  disableTransitionOnThemeChange(() => {
    localStorage.setItem(storageKey, theme)
    document.documentElement.className = theme
    document.querySelector(query)?.setAttribute('aria-label', theme)
  })
}

const toggleTheme = () => {
  setTheme(getTheme() === 'dark' ? 'light' : 'dark')
}

//////////////////////////////////////////////////////////////////////

// set early so no page flashes / CSS is made aware
const theme = getTheme()
setTheme(theme)

window.addEventListener('load', () => {
  const theme = getTheme()
  setTheme(theme)

  document.querySelector(query)?.addEventListener('click', toggleTheme)
})

// event for astro view transitions
document.addEventListener('astro:after-swap', () => {
  const theme = getTheme()
  setTheme(theme)

  document.querySelector(query)?.addEventListener('click', toggleTheme)
})

// sync with system changes
window
  .matchMedia('(prefers-color-scheme: dark)')
  .addEventListener('change', ({ matches: isDark }) => {
    const theme = isDark ? 'dark' : 'light'
    setTheme(theme)
  })

// sync across tabs
window.addEventListener('storage', (e) => {
  if (e.key !== storageKey) return

  setTheme(e.newValue)
})
</script>
