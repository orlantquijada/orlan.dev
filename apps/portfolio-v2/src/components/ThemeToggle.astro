<!-- inline is necessary to avoid FOUC 
     flash happens on dark mode default -->
<script is:inline>
  const storageKey = 'theme-preference'

  ////////////////////////////// Util fns //////////////////////////////

  const disableTransitionOnThemeChange = (callback) => {
    const css = document.createElement('style')
    css.type = 'text/css'
    css.appendChild(
      document.createTextNode(
        `* {
            -webkit-transition: none !important;
            -moz-transition: none !important;
            -o-transition: none !important;
            -ms-transition: none !important;
            transition: none !important;
          }`
      )
    )
    document.head.appendChild(css)

    callback()

    setTimeout(() => {
      const _ = window.getComputedStyle(css).opacity
      document.head.removeChild(css)
    }, 1)
  }

  const getTheme = () => {
    const theme = localStorage.getItem(storageKey)
    if (theme) return theme
    return window.matchMedia('(prefers-color-scheme: dark)').matches
      ? 'dark'
      : 'light'
  }

  const setTheme = (theme) => {
    disableTransitionOnThemeChange(() => {
      localStorage.setItem(storageKey, theme)
      document.documentElement.className = theme
      document.querySelector('#theme-toggle')?.setAttribute('aria-label', theme)
    })
  }

  const toggleTheme = () => {
    setTheme(getTheme() === 'dark' ? 'light' : 'dark')
  }

  //////////////////////////////////////////////////////////////////////

  window.addEventListener('load', () => {
    const theme = getTheme()
    setTheme(theme)

    document
      .querySelector('#theme-toggle')
      ?.addEventListener('click', toggleTheme)
  })

  // sync with system changes
  window
    .matchMedia('(prefers-color-scheme: dark)')
    .addEventListener('change', ({ matches: isDark }) => {
      disableTransitionOnThemeChange(() => {
        const theme = isDark ? 'dark' : 'light'
        setTheme(theme)
      })
    })
</script>
